'A Roadmap for Programming Beginners
'Based on PlantUML Activity Diagram: https://plantuml.com/activity-diagram-beta
'Text styling: https://plantuml.com/creole
'For image edition and generation, access online PlantText design tool (https://www.planttext.com/) or run PlantUML from command line: java -jar plantuml.jar -tsvg roadmap.puml

@startuml
  title A Roadmap for Programming Beginners

  'Subject color
  !$techcolour = "#Cyan"
  !$metacolour = "#Pink"

  'Procedure for inserting subjects
  !unquoted procedure $subject($name, $urls="", $general="no")

    !$colour="#Cyan"
    !if ($general == "yes")
      !$colour="#Pink"
    !endif

    !if ($urls != "")
      !$urls="\n"+$urls
    !endif

    $colour:<b>$name</b>$urls;

  !endprocedure
  

  'Roadmap beginning
  start

  'Roadmap legend
  floating note right $techcolour
    Programming Concepts
  end note
  floating note right $metacolour
    General Programming Stuff
  end note

  'Subjects
  $subject(Algorithms,\
[[https://www.khanacademy.org/computing/computer-science/algorithms#intro-to-algorithms Khan Academy]])
  fork
    $subject(Basic Input/Output)
  fork again
    $subject(Variables,\
[[https://www.khanacademy.org/computing/ap-computer-science-principles/programming-101/storing-variables/a/assigning-variables Khan Academy]])
  fork again
    $subject(Basic Types)
  fork again
    $subject(Naming Convention,\
[[https://en.wikipedia.org/wiki/Naming_convention_(programming) Wikipedia]]\n\
[[https://devopedia.org/naming-conventions Devopedia]]\n\
[[https://dmitripavlutin.com/coding-like-shakespeare-practical-function-naming-conventions/ Opinion]], yes)
  fork again
    $subject(Comments,\
[[https://en.wikipedia.org/wiki/Comment_(computer_programming) Wikipedia]], yes)
  endfork
  fork
    $subject(Conditionals,\
[[https://en.wikipedia.org/wiki/Conditional_(computer_programming) Wikipedia]])
  fork again
    $subject(Indentation,\
[[https://developers.slashdot.org/story/20/06/20/0358229/david-heinemeier-hansson-explains-what-it-takes-to-write-great-code Opinion]], yes)
  endfork
  fork
    $subject(Loops)
  fork again
    $subject(Vectors)
    $subject(Matrices)
  fork again
    $subject(Records (User Types))
  endfork
  fork
    $subject(Functions,\
[[https://computersciencewiki.org/index.php/Functions CS Wiki]]\n\
[[https://eloquentjavascript.net/03_functions.html JS Book]])
    $subject(Macros)
  fork again
    $subject(Parameter Passing)
  fork again
    $subject(Scope,\
[[https://en.wikipedia.org/wiki/Scope_(computer_science) Wikipedia]]\n\
[[https://en.wikiversity.org/wiki/Introduction_to_Programming/Scope Wikiversity]])
  endfork
  fork
    $subject(Recursion,\
[[https://en.wikipedia.org/wiki/Recursion_(computer_science) Wikipedia]]\n\
[[https://www.khanacademy.org/computing/computer-science/algorithms#recursive-algorithms Khan Academy]])
  fork again
    $subject(Dynamic Allocation)
  fork again
    $subject(Sorting and Searching Algorithms)
  fork again
    $subject(Debug,\
[[https://en.wikipedia.org/wiki/Debugging Wikipedia]], yes)
  endfork
  fork
    $subject(Files Input/Output)
  fork again
    $subject(Exception Handling)
  endfork
  $subject(Lists/Stacks/Trees/Graphs)
  $subject(Generic Programming,\
[[https://en.wikipedia.org/wiki/Generic_programming Wikipedia]]\n\
[[https://stackoverflow.com/tags/generic-programming StackOverflow]])
  fork
    $subject(Abstract Data Types)
  fork again 
    $subject(APIs)
  fork again 
    $subject(Documentation,\
[[https://www.doxygen.nl/index.html Tool]], yes) 
  endfork 
  fork 
    $subject(Libraries)
  fork again 
    $subject(Versioning,\
[[https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control Introduction]], yes)
  endfork 
  $subject(Dictionaries,\
[[https://en.wikipedia.org/wiki/Associative_array Wikipedia]]\n\
[[https://en.wikibooks.org/wiki/A-level_Computing/AQA/Paper_1/Fundamentals_of_data_structures/Dictionaries Wiki Book]])
  $subject(Iterators)
  $subject(Regular Expressions,\
[[https://en.wikipedia.org/wiki/Regular_expression Wikipedia]]\n\
[[https://regexr.com/ Playground]]\n\
[[https://regex101.com/ Playground2]])
  fork
    $subject(GUI Programming)
  fork again 
    $subject(Functional Programming,\
[[http://learnyouahaskell.com/ Haskell Book]])
  fork again 
    $subject(Object Oriented Programming)
  fork again
    $subject(Coroutine,\
[[https://en.wikipedia.org/wiki/Coroutine Wikipedia]])
    $subject(Concurrent Programming)
  fork again 
    $subject(Logic Programming)
  endfork
  $subject(Patterns)
  $subject(And so on ...)
@enduml